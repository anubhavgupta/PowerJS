working...


/*


     modules ={

             com:{
                 google:{
                           __pjs__:{
                               $classData:{},
                               $injectable:{}
                           }
                           class1: function(){};
                           class2: function(){};
                       }
                 }
     };
    * */


/*
 // ======================================================SOME IDEAS==============================================================================
var model       =   module("GRID.model");
var view        =   module("GRID.view");
var controller  =   module("GRID.controller");


model.$Class("Employee",function(){

    var employeeList = [];

    this.addEmployee = function(){};

    this.showAllEmployees = function(){};

    this.deleteAllemployees = function(){}

});

model.$Injectable("$Employee",{
    type:"new",//singleton,reference
    injectables:["$List,$Management"],
    params:[]
});

model.$Class
    .extend("SIMS.access.grid.Class1")
    .$Inject([])
    .define("name",function(){

    });

model.$Class.define("className",function(){
    this.method = function(){

        //alternate way to define classes/

    }
});

*/
/*javascript bean classes......*//*



model.$Class
    .$Annotate(test="sdasdasd")
    .$Implements("NJS.Bean")
    .define("beanName", function () {
        var
            name,
            place;

        this.getName = function (name) {
            return name;
        };

        this.setName = function () {
            name = name;
        };

        this.setPlace = function (place) {
            place = place;
        };

        this.getPlace = function () {
            return place;
        }

    });

model().$Class("sadads")
    .$annotate("@View")

 // ======================================================SOME IDEAS==============================================================================


 module("test").$inst(function(module,pjsData){
    module.$Class = function(className){

    };
    module.$Class.prototype = {
        $provides:function(){

        },
        $extend:function(){

        }
    };
    module.$Injectify(module.$Class);
 });

 module("test").$install(function(module,pjsData,moduleData){
    module.$Injectable = function(name,isClass,item){
        //store data in pjsData
    };
    module.$Class.prototype.$provides = function(itemsArr){

    }

 })
  //interface
 module("TestInterface").$Interface("MyInterface")
             .$shouldHave({
                view:function(){

                },
                 renderer:function(){

                 },
                 processor:function(){

                 }
             });

     module("testInterface").$Class("Implementor")
             .$implements(module("TestInterface").MyInterface)
             .view(function(){

             })
             .renderer(function(){

             })
             .processor(function(){

             });




*/
=========================================================================================================

<!--template-->

data={
    items:[
        {text:"Hello", isDone:false},
        {text:"Hello", isDone:false},
        {text:"Hello", isDone:false},
        {text:"Hello", isDone:false}
    ]
}

<div class="todo-app" data-temp="todoApp">
    <input type="text" data-temp="todoApp.input"/>
    <div class="button"></div>
    <div class="list">
        <div class="list-item"></div>
    </div>
</div>


module("View").$PowerClass("todo-app")
    .$events("button",{
        "click":function(){

        }
    })




















